
//SkillHandler("PORING50") {
//StateIdle:
//	//TryCast params: skillname, level, chance/1000, cast time (ms), delay time (ms)
//	TryCast(ColdBolt, 3, 50, 1000, 5000)-> SendEmote(29); //gg
//
//StateRandomMove:
//	TryCast(ColdBolt, 3, 50, 1000, 5000)-> SendEmote(29); //gg
//
//StateAttacking:
//	TryCast(ColdBolt, 5, 200, 1500, 15000)-> SendEmote(29); //gg
//	TryCast(None, 1, 1000, 0, 5000)[HpPercent < 40] -> {
//		SendEmote(26); //Help
//		ChangeAiState(StateFlee);
//	}
//
//StateFlee:
//	TryCast(None, 1, 200, 0, 3000) -> SendEmote(26);
//	TryCast(None, 1, 50, 0, 15000) -> {
//		SendEmote(5); //sweat
//		ChangeAiState(StateIdle);
//	}
//}

SkillHandler("PORING50") {
StateIdle:
	
StateAttacking:
	TryCast(TwoHandQuicken, 1, 1000, 0, 99h)[HpPercent < 99];
}

SkillHandler("STROUF") {
StateAttacking:
	TryCast(LightningBolt, 3, 5%, 0, 5s);
StateChase:
	TryCast(LightningBolt, 3, 5%, 0, 5s);
StateIdle:
	TryCast(NoCast, 3, 200, 0, 5000) -> SendEmote(32);
}


SkillHandler("ELDER") {
StateAttacking:
	TryCast(FireBolt, 7, 1000, 1500, 10000) -> SendEmote(11);
	TryCast(ColdBolt, 7, 1000, 1500, 10000) -> SendEmote(12);
	TryCast(LightningBolt, 7, 1000, 1500, 10000) -> SendEmote(13);
StateChase:
	TryCast(FireBolt, 7, 1000, 1500, 10000) -> SendEmote(11);
	TryCast(ColdBolt, 7, 1000, 1500, 10000) -> SendEmote(12);
	TryCast(LightningBolt, 7, 1000, 1500, 10000) -> SendEmote(13);
}

SkillHandler("MARDUK") {
StateAttacking:
	TryCast(FireBolt, 3, 5%, 1.5s, 5s) -> SendEmote(9);
StateChase:
	TryCast(FireBolt, 3, 10%, 1.5s, 5s) -> SendEmote(9);
}


SkillHandler("SCORPION") {
StateAttacking:
	TryCast(Bash, 1, 100%, 0, 12s);
}

SkillHandler("IRON_FIST") {
StateAttacking:
	TryCast(Bash, 5, 100%, 0, 8s);
}


SkillHandler("ASSULTER") {
StateAttacking:
	TryCast(SonicBlow, 10, 5%, 0.8s, 5s);
}

macro JokerStateSwap() {
	TryCast(NoCast, 10, 1%, 0.8s, 60s) -> {
		var i = Random(0, 4);
		if(i == 4) {
			if(Random(0, 4) == 3)
				ChangeAiClass(AiHyperPacifist); //4% chance
			else
				i = Random(0, 3);
		}
		if(i == 0) ChangeAiClass(AiPassive); //24%
		if(i == 1) ChangeAiClass(AiPassiveSense); //24%
		if(i == 2) ChangeAiClass(AiAssist); //24%
		if(i == 3) ChangeAiClass(AiAggressive); //24%
		//remember to stick looter in here when loot exists
	}
}

SkillHandler("JOKER") {
StateIdle:
	@JokerStateSwap();
StateRandomMove:
	@JokerStateSwap();
}

SkillHandler("INJUSTICE") {
StateAttacking:
	TryCast(SonicBlow, 10, 5%, 0.8s, 5s) -> SendEmote(2);
}

SkillHandler("RYBIO") {
StateAttacking:
	TryCast(SonicBlow, 10, 5%, 0.8s, 5s) -> SendEmote(4);
}

SkillHandler("ZHERLTHSH") {
StateAttacking:
	TryCast(SonicBlow, 10, 5%, 0.8s, 5s) -> SendEmote(3);
}

SkillHandler("ANUBIS") {
StateAttacking:
	TryCast(SonicBlow, 10, 5%, 0.8s, 5s);
}


SkillHandler("TIRFING") {
StateAttacking:
	TryCast(SonicBlow, 10, 5%, 0.8s, 5s) -> SendEmote(18);
}

SkillHandler("WILD_ROSE") {
StateAttacking:
	TryCast(SonicBlow, 5, 5%, 0.8s, 5s) -> SendEmote(6);
}

SkillHandler("SKELETON_GENERAL") {
StateAttacking:
	TryCast(SonicBlow, 10, 5%, 0.8s, 5s) -> SendEmote(2);
}


SkillHandler("MATYR") {
StateAttacking:
	TryCast(SonicBlow, 5, 5%, 0.8s, 5s) -> SendEmote(6);
}

SkillHandler("MINOROUS") {
StateAttacking:
	TryCast(HammerFall, 10, 5%, 1.5s, 5s);
}

SkillHandler("PECOPECO") {
StateChase:
	TryCast(NoCast, 1, 20%, 0s, 5s) -> SendEmote(6);
StateAttacking:
	TryCast(SonicBlow, 2, 5%, 0.8s, 5s) -> SendEmote(6);
}

SkillHandler("MARINE_SPHERE") {
StateIdle:
	//automatically self destruct if hit by another self destruct, but fast
	TryCast(SelfDestruct, 1, 100%, 0.8s, 5s, HideSkillName)[LastDamageSourceType == SelfDestruct];
	
	//self destruct chance is 5% per second increasing by 0.1% for every 1% HP it loses.
	TryCast(SelfDestruct, 1, 50 + (100-HpPercent) * 2, 2s, 5s, HideSkillName)[HpPercent < 99 && TimeSinceLastDamage < 15s];
	
OnDie:
	EnterPostDeathPhase();
	SetHpNoNotify(1200); //will self destruct for 600 damage roughly
StateSpecial:
    TryCast(SelfDestruct, 1, 1000, 4000, 0, EventOnStartCast | HideSkillName);
}

SkillHandler("GEOGRAPHER") {
StateAny:
    TryCast(Heal, 9, 100%, 0.5s, 5s)[FindAllyBelowHpPercent(60)];
}

event TestCastEvent {
	local delay = Param1;
	StartTimer();
	SetTimer(2000-delay);
	StartCastCircle(SelfPosition, 2, delay, false);
OnTimer 2000:
	AreaSkillIndirect(SelfPosition, ThunderStorm, 10);
	EndEvent();
}

SkillHandler("TARGET_DUMMY") {
    StateAny:
    //TryCast(Heal, 9999, 1000, 1500, 3000)[HpPercent <= 99];
    //TryCast(GrandThunderstorm, 9999, 1000, 1500, 5000)[HpPercent <= 99] -> CreateEvent("TestCastEvent", RandomFreeTileInRange(12), 2000);
	//TryCast(ColdBolt, 5, 100%, 10s, 5s);
	//TryCast(NoCast, 9999, 1000, 1500, 5000)[HpPercent <= 99] -> {
	//	TossSummonMonster(5,"GTB_EGG",9,9);
	//};
    //TryCast(Heal, 9999, 1000, 1500, 5000)[HpPercent <= 99];	
}


SkillHandler("VITATA") {
StateAny:
    TryCast(Heal, 3, 100%, 0.5s, 5s)[FindAllyBelowHpPercent(60)] -> SendEmote(5);
	TryCast(Heal, 3, 100%, 0.5s, 5s)[HpPercent < 40] -> SendEmote(5);
}


SkillHandler("ALICE") {
StateAny:
    TryCast(Heal, 8, 100%, 0.5s, 5s)[FindAllyBelowHpPercent(90)];
	TryCast(Heal, 8, 100%, 0.5s, 5s)[HpPercent < 60];
}


SkillHandler("CHEPET") {
StateAny:
    TryCast(Heal, 9, 100%, 0.5s, 5s)[FindAllyBelowHpPercent(60)];
StateAttacking:
	TryCast(NoCast, 3, 20%, 0, 5000) -> SendEmote(17);
}

SkillHandler("PERMETER") {
StateAny:
    TryCast(Heal, 9, 100%, 0.5s, 5s, HideSkillName)[FindAllyBelowHpPercent(60)] -> SendEmote(5);
}

SkillHandler("BATHORY") {
StateChase:
	TryCast(NoCast, 3, 100%, 0, 0) -> SendEmote(30);
}
